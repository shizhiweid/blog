import{_ as s,o as n,c as a,a as t}from"./app-68d0c3d2.js";const e={},p=t(`<h2 id="typescript中的工具类型" tabindex="-1"><a class="header-anchor" href="#typescript中的工具类型" aria-hidden="true">#</a> TypeScript中的工具类型</h2><p>工类型主要于处理和转换已有类型，它们不是实际的类型，而是用来处理类型的工具。简单来说，工具类型可以认为是TS类型的工具函数，把原有类型当参数来处理。 举一个简单的PartialI工具类型应用的例子:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//已有类型User</span>
<span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
<span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token literal-property property">age</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//新类型PartialUser， 使用Partial将 属性都变成可选</span>
type PartialUser <span class="token operator">=</span> Partial<span class="token operator">&lt;</span>User<span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// { name?: string; age?: number; }</span>


<span class="token literal-property property">常用工具类型有</span><span class="token operator">:</span>
<span class="token number">1.</span> Partial <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">:</span>将类型<span class="token constant">T</span>的所有属性变为可选属性。
<span class="token number">2.</span> Required <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token operator">|</span> <span class="token operator">:</span> 将类型<span class="token constant">T</span>的所有属性变为必选属性。
<span class="token number">3.</span> Readonly <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">:</span>将类型 <span class="token constant">T</span>的所有 属性变为只读属性。
<span class="token number">4.</span> Record <span class="token operator">&lt;</span><span class="token constant">K</span>， <span class="token constant">T</span><span class="token operator">&gt;</span><span class="token operator">|</span> <span class="token operator">:</span>创建一 个类型， 中属性名为类型 <span class="token constant">K</span>中的值， 属性值为类型<span class="token constant">T</span>中的值。
<span class="token number">5.</span> Pick <span class="token operator">&lt;</span><span class="token constant">T</span>，<span class="token constant">K</span><span class="token operator">&gt;</span> <span class="token operator">:</span>从类型<span class="token constant">T</span>中选择属性名为类型<span class="token constant">K</span>中的属性，创建一 个新类型。
<span class="token number">6.</span> Omit <span class="token operator">&lt;</span><span class="token constant">T</span>， <span class="token constant">K</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token operator">:</span>从类型<span class="token constant">T</span>中排除属性名为类型<span class="token constant">K</span>中的属性，创建一 个新类型。
<span class="token number">7.</span> Exclude <span class="token operator">|</span> <span class="token operator">&lt;</span><span class="token constant">T</span>， <span class="token constant">U</span><span class="token operator">&gt;</span><span class="token operator">|</span> <span class="token operator">:</span>从类型<span class="token constant">T</span>中排除类型<span class="token constant">U</span>中的所有属性。
<span class="token number">8.</span> Extract e <span class="token operator">&lt;</span><span class="token constant">T</span>， <span class="token constant">U</span><span class="token operator">&gt;</span><span class="token operator">|</span> <span class="token operator">:</span>从类型<span class="token constant">T</span>中提取类型<span class="token constant">U</span>中存在的所有属性。
<span class="token number">9.</span> NonNullable <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">:</span> 从类型<span class="token constant">T</span>中移除<span class="token keyword">null</span>和<span class="token keyword">undefined</span>。
<span class="token number">10.</span> ReturnType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>：获取函数类型<span class="token constant">T</span>的返回值类型
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),o=[p];function c(l,r){return n(),a("div",null,o)}const k=s(e,[["render",c],["__file","a10.html.vue"]]);export{k as default};
