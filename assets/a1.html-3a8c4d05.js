import{_ as i,o as l,c as e,a as p}from"./app-3d925723.js";const a={},s=p('<h2 id="js中改变原数组的方法主要包括" tabindex="-1"><a class="header-anchor" href="#js中改变原数组的方法主要包括" aria-hidden="true">#</a> JS中改变原数组的方法主要包括:</h2><ol><li><p>push() - 在数组末尾添加一个或多个元素，并返回新数组的长度。</p></li><li><p>pop() - 删除数组的最后一个元素，并返回该元素的值。</p></li><li><p>shift() - 删除数组的第一个元素，并返回该元素的值。</p></li><li><p>unshift() - 在数组的开头添加一个或多个元素，并返回新数组的长度。</p></li><li><p>splice() - 从指定位置开始修改数组的内容，删除元素或插入新元素。</p></li><li><p>sort() - 对数组进行排序。</p></li><li><p>reverse() - 颠倒数组中元素的顺序。</p></li></ol><h2 id="js中不改变原数组的方法主要包括" tabindex="-1"><a class="header-anchor" href="#js中不改变原数组的方法主要包括" aria-hidden="true">#</a> JS中不改变原数组的方法主要包括：</h2><ol><li><p>slice() - 从原数组中截取一段，并返回新数组，原数组不变。</p></li><li><p>concat() - 连接两个或多个数组，并返回新数组，原数组不变。</p></li><li><p>filter() - 通过指定函数过滤原数组的元素，并返回新数组，原数组不变。</p></li><li><p>map() - 将原数组中的每个元素通过指定函数返回新数组，并返回新数组，原数组不变。</p></li><li><p>join() - 将数组中的所有元素以指定分隔符连接成一个字符串，并返回字符串，原数组不变。</p></li></ol>',4),t=[s];function o(r,c){return l(),e("div",null,t)}const h=i(a,[["render",o],["__file","a1.html.vue"]]);export{h as default};
